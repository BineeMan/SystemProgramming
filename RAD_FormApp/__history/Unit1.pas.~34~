unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.StdCtrls,
  Math;

  type PDrawCallback1 =
      function ( const FileName: PWideChar;
       Width: Integer; Height: Integer; out MyBmb: HBITMAP): HResult; stdcall;

type
  TForm1 = class(TForm)
    Button1: TButton;
    TextBox_FilePath: TEdit;
    Image1: TImage;
    TextBox_Width: TEdit;
    TextBox_Height: TEdit;



    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    DrawCallback: PDrawCallback1;
    HInWindow: HWND;
    //HOutWindow: HWND;
    //lpReserved: LPVoid;
    { Public declarations }
  end;

  function GetExternalWindow2( DrawCallback1: PDrawCallback1;
  HInWindow: HWND; out HOutWindow: HWND;
    out StatusInfo: WideString; lpReserved: Integer) : HResult; stdcall;

var
  Form1: TForm1;


implementation

{$R *.dfm}

var
  i: HWND;
  filePath: String;

procedure TForm1.Button1Click(Sender: TObject);
var
    Width: Integer;
    Height: Integer;
    filePath: String;
    Bitmap: TBitmap;
    MyHbitmap: HBITMAP;
    DrawCallbackLocal: PDrawCallback1;
    res: HResult;
begin
  //filePath := 'E:\SystemProgramming\Files\test.tsv';
  //MyHbitmap := NIL;

  filePath := TextBox_FilePath.Text;
  Width := StrToInt(TextBox_Width.Text);
  Height:= StrToInt(TextBox_Height.Text);

  DrawCallbackLocal := DrawCallback;

  res := DrawCallback(PWideChar(filePath), Width, Height, MyHbitmap);
  if ( MyHbitmap = NULL ) then begin
    MessageBox(Form1.Handle, PChar( 'NULL' ), PChar('asd'), MB_OK);
  end
  else begin
    MessageBox(Form1.Handle, PChar(IntToStr(MyHbitmap)), PChar('asd'), MB_OK);
    Image1.Picture.Bitmap.Handle := MyHbitmap;
  end;

end;

function GetForm(Out FormHandle: HWND; DrawCallback1: PDrawCallback1): HResult;
var Form1: TForm1;
begin
  Form1:= TForm1.Create(nil);
  FormHandle := Form1.Handle;

  Form1.DrawCallback := DrawCallback1;
end;


function GetExternalWindow2( DrawCallback1: PDrawCallback1;
  HInWindow: HWND; out HOutWindow: HWND;
    out StatusInfo: WideString; lpReserved: Integer) : HResult; stdcall;

begin
  try
    begin
      GetForm(HOutWindow, DrawCallback1);

      Result := 1;
    end
  except
    on E: Exception do Result := -1
  end;

end;

end.

